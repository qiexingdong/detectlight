//==========================================================================
//文件名称：rtc.h
//功能概要：STM32L431RC RTC底层驱动程序头文件
//版权所有：苏州大学飞思卡尔嵌入式中心(sumcu.suda.edu.cn)
//==========================================================================
#ifndef _RTC_H
#define _RTC_H
#include "mcu.h" 
//闹钟选择
#define A 0       //闹钟A
#define B 1       //闹钟B

// ===========================================================================
// 函数名称：RTC_Init
// 函数参数：无
// 函数返回：0，初始化成功；1，进入初始化失败
// 功能概要：选择LSI时钟，频率为32kHz;将7位异步预分频器为128,15位同步预分频器为256;并初始化时钟
// ===========================================================================
uint8_t RTC_Init(void);

// ===========================================================================
// 函数名称：RTC_Set_Date
// 函数参数：year:年份;month:月份;date:天数;week:星期几
// 函数返回：1:设置日期成功;0:设置日期失败
// 功能概要：设置RTC时钟的日期
// ===========================================================================
uint8_t RTC_Set_Date(uint8_t year,uint8_t month,uint8_t date,uint8_t week);

// ===========================================================================
// 函数名称：RTC_Set_Time
// 函数参数：hour:小时;min:分钟;sec:秒钟;
// 函数返回：1:设置时间成功;0:设置时间失败
// 功能概要：设置RTC时钟的时间
// ===========================================================================
uint8_t RTC_Set_Time(uint8_t hour,uint8_t min,uint8_t sec);

// ===========================================================================
// 函数名称：RTC_Get_Date
// 函数参数：year:年份;month:月份;date:天数;week:星期几
// 函数返回：无
// 功能概要：获取RTC时钟的日期
// ===========================================================================
void RTC_Get_Date(uint8_t *year,uint8_t *month,uint8_t *date,uint8_t *week);

// ===========================================================================
// 函数名称：RTC_Get_Time
// 函数参数：hour:小时;min:分钟;sec:秒钟;
// 函数返回：无
// 功能概要：获取RTC时钟的时间
// ===========================================================================
void RTC_Get_Time(uint8_t *hour,uint8_t *min,uint8_t *sec);

// ==========================================================================
// 函数名称：RTC_Set_Alarm
// 函数参数：SelAlarm：0：闹钟A，1：闹钟B;week:星期数;hour:小时;min:分钟;sec:秒钟
// 函数返回：无
// 功能概要：设置闹钟的时间
// ==========================================================================
void RTC_Set_Alarm(uint8_t SelAlarm,uint8_t week,uint8_t hour,uint8_t min,uint8_t sec);

// ==========================================================================
// 函数名称：RTC_Set_PeriodWakeUp
// 函数参数：rtc_s:自动唤醒的周期，单位为秒
// 函数返回：无
// 功能概要：设置自动唤醒的周期
// ==========================================================================
void RTC_Set_PeriodWakeUp(uint8_t rtc_s);

// ==========================================================================
// 函数名称：RTC_Alarm_Enable_Int
// 函数参数：SelAlarm：0：闹钟A，1：闹钟B
// 函数返回：无
// 功能概要：使能闹钟中断
// ==========================================================================
void RTC_Alarm_Enable_Int(uint8_t SelAlarm);

// ==========================================================================
// 函数名称：RTC_PeriodWKUP_Enable_Int
// 函数参数：无
// 函数返回：无
// 功能概要：使能自动唤醒中断
// ==========================================================================
void RTC_PeriodWKUP_Enable_Int();

// ==========================================================================
// 函数名称：RTC_PeriodWKUP_Disable_Int
// 函数参数：无
// 函数返回：无
// 功能概要：禁止自动唤醒中断
// ==========================================================================
void RTC_PeriodWKUP_Disable_Int();

// ==========================================================================
// 函数名称：RTC_Alarm_Disable_Int
// 函数参数：SelAlarm：0：闹钟A，1：闹钟B
// 函数返回：无
// 功能概要：禁止闹钟中断
// ==========================================================================
void RTC_Alarm_Disable_Int(uint8_t SelAlarm);

//=====================================================================
//函数名称：RTC_PeriodWKUP_Get_Int
//函数返回：1：有唤醒中断，0：没有唤醒中断。
//参数说明：无
//功能概要：获取唤醒中断标志。
//=====================================================================
uint8_t RTC_PeriodWKUP_Get_Int();

//=====================================================================
//函数名称：RTC_PeriodWKUP_Clear
//函数返回：无
//参数说明：无
//功能概要：清除唤醒中断标志。
//=====================================================================
void RTC_PeriodWKUP_Clear();

//=====================================================================
//函数名称：RTC_Alarm_Get_Int
//函数返回：1：有闹钟中断，0：没有闹钟中断。
//参数说明：SelAlarm：0：闹钟A，1：闹钟B
//功能概要：获取闹钟中断标志。
//=====================================================================
uint8_t RTC_Alarm_Get_Int(uint8_t SelAlarm);

//=====================================================================
//函数名称：RTC_Alarm_Clear
//函数返回：无
//参数说明：SelAlarm：0：闹钟A，1：闹钟B
//功能概要：清除闹钟中断标志。
//=====================================================================
void RTC_Alarm_Clear(uint8_t SelAlarm);

// ====================================================================
// 函数名称：RTC_Wait_Synchro
// 函数参数：无
// 函数返回：1:备份失败;0:备份成功。
// 功能概要： 将日历寄存器中的值备份到备用寄存器中
// ====================================================================
uint8_t RTC_Wait_Synchro(void);
#endif
